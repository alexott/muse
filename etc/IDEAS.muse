This is the "Ideas" page for Emacs Muse.

It lists various ideas for future enhancements to Emacs Muse.  It also
serves to keep track of various changes that the maintainer would like
to merge into Muse at some point.

* Pending code

This is code that may or may not be already approved, but should be
checked out at some point.

** Waiting for a new release

 - Jim Ottaway
   - jeho-latex.el: a rewrite of muse-latex.el which should replace it
     at some point.
   - muse-latex-labels.el: addition of cross-references to LaTeX.
     Should be merged into muse-latex.el after replacing with
     jeho-latex.el.

 - David D. Smith
   - dds-emphasis-bits.el
     - New syntax for explicitly specifying emphasis:
       {[_-=*] some emphasized text}.
       Also, {** some text **} and {*** some text ***} should work.
     - Using -strike- to do strikethrough.

* Ideas without code

** After 3.10 release

None of these ideas has been finalized yet.

*** Support for different source markup formats

For any of these to be done, we have to write functions that call the
right program to do the publishing for us.  If the markup format has
some project-aware tools, write Elisp wrappers for those at the
project-publish level.

 - Markdown: http://daringfireball.net/projects/markdown/

   mwolson: I hate this format, but it's popular.

 - reStructuredText: http://docutils.sourceforge.net/rst.html

   mwolson: I like this format from an initial glance.

 - AsciiDoc: http://www.methods.co.nz/asciidoc/index.html

   Git uses this, but it has heavy dependencies.

 - Org Mode: http://orgmode.org/

   Just use org-publish functions.

 - Like Muse's default markup, but allow tags to be specified in
   Texinfo style: namely, "@tagname{contents}" instead of
   "<tagname>contents</tagname>" for small regions and
   "@tagname\ncontents\n@end tagname" for large regions.

   This might be a pain to implement, and only one person has asked
   for it.

 - Take markup features from phpBB and make a format out of it.  This
   could interest the forum crowd in our work.

   mwolson: I do not have interest in making a new markup format at
   the moment.

*** Publishing to plain text

 - The file experimental/muse-message.el also needs some attention, so
   that it can do plain text.  Maybe it should be renamed to
   muse-plain-text.el.

 - People have requested being able to publish Muse format to other
   stuff like rst and markdown.

   mwolson: I'm not in any hurry to implement this.

*** Make tags for every "main" Muse markup syntax

The idea is to have something to fall back on.  One use case is
putting a list into a table.

*** Allow pages made by M-x muse-index to be refreshed automatically

The idea is to update the contents of the index page whenever a new
page is saved.  This should be controlled by a new customizable option
called `muse-index-update', which is either nil or non-nil.

`muse-index' should be modified to add the generated buffer into a new
variable called `muse-index-buffers'.

A new function called `muse-index-update-buffers' should be made,
which goes through the list `muse-index-buffers', doing the following.
It must check `muse-index-update' first to see whether it should do
anything.  It must take no arguments.

  (let ((index (muse-index-as-string as-list exclude-private)))
    (dolist (buffer muse-index-buffers)
      (with-current-buffer buffer
        (erase-buffer)
        (insert index)
        (current-buffer))))

This function should be added to after-save-hook in muse-mode.el.
